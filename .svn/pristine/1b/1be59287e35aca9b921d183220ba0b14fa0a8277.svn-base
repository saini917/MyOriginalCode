package WaterAndSeweragePropertyTaxManagement;


import java.io.IOException;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.Reporter;

import GenericLibrary.ExcelDataDriver;
import GenericLibrary.CommonLibrary;

public class ToVerifyDownloadAssessmentReport_SC_08_TC_05 extends CommonLibrary
{
	ExcelDataDriver excel=new ExcelDataDriver();
	WebDriverWait wait=new WebDriverWait(driver,10);
	String downloadpath="C:\\ILFS\\NRDA\\workspace\\NRDA_FRAMEWORK\\NRDA_PROJECT\\DownloadFile";

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Pending Application".
	 * @author deepak.saini
	 * @since 2017-11-08
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//td[@class='leftCol']/table/tbody/tr/td/form/div/ul/li[2]")
	private WebElement pending_application;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "ENTER APPLICATION NUMBER".
	 * @author deepak.saini
	 * @since 2017-11-27
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@class='wrapper']/table/tbody/tr/td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div/div/div/table/tbody/tr/td[contains(text(),'Enter Application Number')]/following-sibling::td/input")
	private WebElement enterApplicationNymber;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "SEARCH".
	 * @author deepak.saini
	 * @since 2017-11-27
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//button/span[contains(text(),'Search')]")
	private WebElement searchbtn;


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "ACTION".
	 * @author deepak.saini
	 * @since 2017-11-27
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//table/tbody/tr/td/a/img[@src='/NRDAuthority/resources/images/view-new.png']")
	private WebElement action;


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "DOWNLOAD ASSESSMENT REPORT".
	 * @author deepak.saini
	 * @since 2017-11-27
	 */
	/****************************************************************************************************/

	@FindBy(xpath="//button/span[contains(text(),'Download Assessment Report')]")
	private WebElement downloadassessment;


	public void verifyPendingApplicationDashboard() throws InterruptedException
	{
		wait.until(ExpectedConditions.elementToBeClickable(pending_application));
		HighlightOnElement(pending_application);
		Assert.assertTrue(pending_application.isDisplayed(),"PENDING APPLICATION MENU is displayed");
		Assert.assertTrue(pending_application.isEnabled(),"PENDING APPLICATION MENU is enabled");
		pending_application.click();
		waitForSomeTime();
		waitForSomeTime();
	}

	public void verifySpecificPendingApplication() throws EncryptedDocumentException, InvalidFormatException, IOException, InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(enterApplicationNymber));
		HighlightOnElement(enterApplicationNymber);
		Assert.assertTrue(enterApplicationNymber.isDisplayed(),"ENTER APPLICATION INPUT BOX is displayed");
		Assert.assertTrue(enterApplicationNymber.isEnabled(),"ENTER APPLICATION INPUT BOX is enabled");
		excel.getExcelData(enterApplicationNymber,"PropertyTax_Application_Num",0 ,1);

		wait.until(ExpectedConditions.elementToBeClickable(searchbtn));
		HighlightOnElement(searchbtn);
		Assert.assertTrue(searchbtn.isDisplayed(),"SEARCH BUTTON is displayed");
		Assert.assertTrue(searchbtn.isEnabled(),"SEARCH BUTTON is enabled");
		searchbtn.click();

		wait.until(ExpectedConditions.elementToBeClickable(action));
		HighlightOnElement(action);
		Assert.assertTrue(action.isDisplayed(),"ACTION BUTTON is displayed");
		Assert.assertTrue(action.isEnabled(),"ACTION BUTTON is enabled");
		waitForSomeTime();
		action.click();
	}
	public void verifyDownloadAssessmentReport() throws Exception
	{
		wait.until(ExpectedConditions.elementToBeClickable(downloadassessment));
		HighlightOnElement(downloadassessment);
		Assert.assertTrue(downloadassessment.isDisplayed(),"DOWNLOAD ASSESSMENT REPORT IS DISPLAYED");
		Assert.assertTrue(downloadassessment.isEnabled(),"DOWNLOAD ASSESSMENT REPORT IS ENABLED");
		Reporter.log("Expected result:"+downloadassessment.getText(),true);
		downloadassessment.click();
		Reporter.log("Action is performed on Download Assessment report",true);
	}

}



