package NRDA_NewConnection;

import java.io.IOException;

import org.apache.log4j.Logger;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.Reporter;

import GenericLibrary.CommonLibrary;
import GenericLibrary.ExcelDataDriver;


public class ToVerifyBuildingDetailsTab_SC_03_TC_26 extends CommonLibrary
{
	ExcelDataDriver excel=new ExcelDataDriver();
	Logger log=Logger.getLogger("devpinoyLogger");
	WebDriverWait wait = new WebDriverWait(driver,50);

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on Property ID radio button".
	 * @author deepak.saini
	 * @since 2017-08-22
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@class='ui-tabs-panels']/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/span/label[contains(text(),'Property ID')]/../../../../../../following-sibling::td/table/tbody/tr/td/input")
	private WebElement propertyid;

	public void validPropertyID() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		wait.until(ExpectedConditions.elementToBeClickable(propertyid));
		HighlightOnElement(propertyid);
		Assert.assertTrue(propertyid.isDisplayed());
		Assert.assertTrue(propertyid.isEnabled());
		excel.getExcelData(propertyid,"Building Details",3,4);
		Reporter.log("Click on Property ID",true);
		waitForSomeTime();
	}
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "enter Property ID ".
	 * @author deepak.saini
	 * @since 2017-08-22
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@id='form0:dlg_propertySearch']/div/div/div/span/table/tbody/tr/td/label[contains(text(),'Enter Property ID : ')]/../following-sibling::td/input")
	private WebElement enterid;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "building Name ".
	 * @author deepak.saini
	 * @since 2017-08-22
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@class='ui-tabs-panels']/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/span/label[contains(text(),'Name of Building')]/../../../../../../following-sibling::td/table/tbody/tr/td/input")
	private WebElement buildingname;


	public void enterDetails() throws EncryptedDocumentException, InvalidFormatException, IOException
	{
		wait.until(ExpectedConditions.visibilityOf(enterid));
		HighlightOnElement(enterid);
		Assert.assertTrue(enterid.isDisplayed());
		Assert.assertTrue(enterid.isEnabled());
		excel.getExcelData(enterid,"Building Details",1,4);
		Reporter.log("Enter detail /n Enter Property ID",true);

		wait.until(ExpectedConditions.visibilityOf(buildingname));
		HighlightOnElement(buildingname);
		Assert.assertTrue(buildingname.isDisplayed());
		Assert.assertTrue(buildingname.isEnabled());
		excel.getExcelData(buildingname,"Building Details",2,3);
		acceptAlert();
		Reporter.log("City :- Drop down selection /n Enter Property ID /n Sector :- Drop down selection /n Ward :- Drop down selection /n House Number:- Text Field /n Floor :- Text Field /n Pin Code:- Text Field",true);
	}

}
