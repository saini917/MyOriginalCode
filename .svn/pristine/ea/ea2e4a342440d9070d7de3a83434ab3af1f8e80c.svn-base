package WaterAndSewerageDisconnection;

import java.awt.AWTException;
import java.io.IOException;
import java.util.List;

import org.apache.log4j.Logger;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.testng.Assert;
import org.testng.Reporter;

import GenericLibrary.CommonLibrary;
import GenericLibrary.ExcelDataDriver;

/**
 * @author Sarvesh.Nellore
 * @Date: 25-09-2017
 * @Purpose: ToVerify Disconnection In WaterAndSewerage
 */
public class ToverifyDisConnectionAsWaterandSewerage extends CommonLibrary 
{

	ExcelDataDriver excel=new ExcelDataDriver();
	Logger log=Logger.getLogger("devpinoyLogger");
	
	
	public void toverifyDisconnection_Icon01() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		waitForSomeTime();
		String Application_Number=excel.getExcelData1("Disconnection", 0, 1);
		System.out.println("Application NumberIs:"+Application_Number );
		List<WebElement> allpages = driver.findElements(By.xpath("//div[@class='ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow ui-overlay-visible']/div[2]/div/div/div/div[2]/span[4]/span"));
		System.out.println("Total pages :" +allpages.size());
		    
		    boolean check = true;
		    for(int i=1; i<=(allpages.size()); i++)
		        {
		    	List<WebElement> allrows = driver.findElements(By.xpath("//div[@class='ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow ui-overlay-visible']/div[2]/div/div/div/div[1]/table/tbody/tr"));
		            for(int row=1; row<=allrows.size(); row++)
		                {
		                    System.out.println("Total rows :" +allrows.size()); 
		                    String name = driver.findElement(By.xpath("//div[@class='ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow ui-overlay-visible']/div[2]/div/div/div/div[1]/table/tbody/tr["+row+"]/td[2]")).getText();
		                    //System.out.println(name);
		                    System.out.println("Row loop");
		                    if(name.equals(Application_Number))
		                        {
		                            WebElement ApplicationNumber = driver.findElement(By.xpath("//div[@class='ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow ui-overlay-visible']/div[2]/div/div/div/div[1]/table/tbody/tr["+row+"]/td[6]/a[@title='Disconnection']"));
		                            ApplicationNumber.click();
		                            System.out.println("Element  exist");
		                            check = false;
		                            break;
		                        }
		                    else
		                    {
		                        System.out.println("Element doesn't exist");
		                    }
		               
		                }

		       
		            if(check)
		            {
		            allpages.get(i).click();
		            waitForSomeTime();
		            }
		      
		           
		        }
		    waitForSomeTime();
		    waitForSomeTime();
	
	}	
	
	
	
	
	

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "DisConnection_Icon"
	 * @author sarvesh.nellore
	 * @Date: 25-09-2016
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//img[@src='/NRDAuthority1/resources/images/disconnection.png']")
	private WebElement DisConnection_Icon;

/*
	public void toverifyDisconnection_Icon01() throws InterruptedException
	{
		waitForSomeTime();
		HighlightOnElement(DisConnection_Icon);
		Assert.assertEquals(true,DisConnection_Icon.isEnabled());
		Assert.assertNotNull(DisConnection_Icon,"Click on DisConnection_Icon in Application of Water and Sewerage sucessfully");
		DisConnection_Icon.click();
		waitForSomeTime();
		System.out.println(" To Verify DisConnection_Icon Link in Application of Water&Sewerage link is Present" ); //print for eclipse console

	}
*/
	/*****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "MultipleDetailsTab".
	 * @author Sarvesh.Nellore
	 * @since 25-09-2016
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//*[@id='form0:tabView']/ul/li/a")
	private List<WebElement> MultipleDetailsTab;

	public void toverifyAllConnectionDetailsTab01() throws InterruptedException

	{
		waitForSomeTime();
		for(WebElement menulist:MultipleDetailsTab)
		{
		Assert.assertNotNull(menulist.isDisplayed(),"Test case pass");
			if(menulist.isDisplayed())
			{
				HighlightOnElement(menulist);
				String Menu=menulist.getText();
				Reporter.log(" Menu list under Application Is:"+Menu,true);
			}

		}
	}
	/*****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "WaterConnectionDetailsTab".
	 * @author Sarvesh.Nellore
	 * @since 25-09-2016
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//a[contains(.,'Water Disconnection Details/जल वियोग विवरण')]")
	private WebElement WaterDisConnectionDetailTab;

	/*****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "WaterConnectionDetailsTab".
	 * @author Sarvesh.Nellore
	 * @since 25-09-2016
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//input[@title='Reason' and @type='text']")
	private WebElement Reason_Field;

	/*****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "WaterConnectionDetailsTab".
	 * @author Sarvesh.Nellore
	 * @since 25-09-2016
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@class='ui-tabs ui-widget ui-widget-content ui-corner-all ui-hidden-container ui-tabs-top']/div/div[5]/table/tbody/tr/td/table/tbody/tr/td[2]/table/tbody/tr/td[2]/table/tbody/tr/td/span/div/div[1]/label")
	private WebElement Upload_Document;


	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "SubmitButton"
	 * @author sarvesh.nellore
	 * @Date: 18-08-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//button[contains(.,'Submit') and@type='submit']")
	private WebElement Submit_Button;



	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Save As Draft"
	 * @author sarvesh.nellore
	 * @Date: 18-08-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//div[@class='ui-tabs ui-widget ui-widget-content ui-corner-all ui-hidden-container ui-tabs-top']/div/div[5]/span/center/table/tbody/tr[2]/td/span/button[contains(.,'Save As Draft')]")
	private WebElement SaveAsDraftButton;


	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Reset"
	 * @author sarvesh.nellore
	 * @Date: 18-08-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//div[@class='ui-tabs ui-widget ui-widget-content ui-corner-all ui-hidden-container ui-tabs-top']/div/div[5]/span/center/table/tbody/tr[2]/td/span/button[contains(.,'Back')]")
	private WebElement BackButton;



	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Close"
	 * @author sarvesh.nellore
	 * @Date: 18-08-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//div[@class='ui-tabs ui-widget ui-widget-content ui-corner-all ui-hidden-container ui-tabs-top']/div/div[5]/span/center/table/tbody/tr[2]/td/span/button[contains(.,'Close')]")
	private WebElement CloseButton;



	/*****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "MultipleDetailsTab".
	 * @author Sarvesh.Nellore
	 * @since 25-09-2016
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//table[@style='width: 100%;border-collapse: collapse;border: 0;']/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[1]/table/tbody/tr/td/span/label")
	private List<WebElement> AllFields;


	public void toverifyWaterDisConnectionDetailsTab02() throws InterruptedException
	{
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(WaterDisConnectionDetailTab);
		Assert.assertEquals(true,WaterDisConnectionDetailTab.isEnabled());
		Assert.assertNotNull(WaterDisConnectionDetailTab,"Click on WaterConnectionDetailTab in Application of Water and Sewerage sucessfully");
		WaterDisConnectionDetailTab.click();
		waitForSomeTime();
		System.out.println(" To Verify WaterConnectionDetailTab Link in Application of Water&Sewerage link is Present" ); //print for eclipse console

	}
	
	
	@FindBy(xpath="//a[contains(.,'Connection Details/कनेक्शन विवरण')]")
	private WebElement ConnectionDetailTab;
	
	@FindBy(xpath="//input[@title='Number of Flats']")
	private WebElement NoofFlats;
	
	@FindBy(xpath="//input[@title='Number of Students/Seat/Employees']")
	private WebElement NoofStudentsEmployees;
	
	/*public void toverifyConnectionDetailsTab02() throws InterruptedException
	{
		waitForSomeTime();
		HighlightOnElement(ConnectionDetailTab);
		Assert.assertEquals(true,ConnectionDetailTab.isEnabled());
		Assert.assertNotNull(ConnectionDetailTab,"Click on ConnectionDetailTab in Application of Water and Sewerage sucessfully");
		ConnectionDetailTab.click();
		waitForSomeTime();
		waitForSomeTime();
		System.out.println(" To Verify ConnectionDetailTab Link in Application of Water&Sewerage link is Present" ); //print for eclipse console
		HighlightOnElement(NoofFlats);
		NoofFlats.sendKeys("10");
		NoofStudentsEmployees.click();
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(NoofStudentsEmployees);
		NoofStudentsEmployees.sendKeys("25");
		HighlightOnElement(WaterConnectionDetailTab);
		WaterConnectionDetailTab.click();
		waitForSomeTime();
		waitForSomeTime();
		waitForSomeTime();
		
		
		
		
		
	}*/
	
	
	
	
	
	

	public void toverifyFiledsinWaterConnectionTab02() throws InterruptedException
	{

		waitForSomeTime();
		
		for(WebElement AllFieldsList:AllFields)
		{
		Assert.assertNotNull(AllFieldsList.isDisplayed(),"Test case pass");
			if(AllFieldsList.isDisplayed())
			{
				HighlightOnElement(AllFieldsList);
				String Menu=AllFieldsList.getText();
				System.out.println(" Menu list under Application Is:"+Menu );
			}

		}
		HighlightOnElement(Submit_Button);
		Assert.assertEquals(true,Submit_Button.isDisplayed());
		System.out.println(" To Verify Submit Button in Application of Water&Sewerage link is Present" ); //print for eclipse console

		HighlightOnElement(SaveAsDraftButton);
		Assert.assertEquals(true,SaveAsDraftButton.isDisplayed());
		System.out.println(" To Verify SaveAsDraft Button  in Application of Water&Sewerage link is Present" ); //print for eclipse console

		HighlightOnElement(BackButton);
		Assert.assertEquals(true,BackButton.isDisplayed());
		System.out.println(" To Verify Back Button  in Application of Water&Sewerage link is Present" ); //print for eclipse console

		HighlightOnElement(CloseButton);
		Assert.assertEquals(true,CloseButton.isDisplayed());
		System.out.println(" To Verify Close Button in Application of Water&Sewerage link is Present" ); //print for eclipse console

	}

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Error Message"
	 * @author sarvesh.nellore
	 * @Date: 16-08-2017
	 */
	/****************************************************************************************************/		
	@FindBy(xpath="//span[contains(.,'Mandatory Field : Reason')]")
	private WebElement ErrorMsg_ReasonField;

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Close Child Window"
	 * @author sarvesh.nellore
	 * @Date: 16-08-2017
	 */
	/****************************************************************************************************/		
	@FindBy(xpath=".//*[@id='form0:growl_container']/div/div/div[1]")
	private WebElement ErrorMsg_Close;


	public void toverifyReasonFieldinWaterConnectionTab03() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		waitForSomeTime();				
		HighlightOnElement(Reason_Field);
		Assert.assertEquals(true,Reason_Field.isDisplayed());
		excel.getExcelData(Reason_Field, "WaterConnectionDetails", 0, 1);
		System.out.println(" To Verify Reason_Field in Application of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		Reason_Field.clear();
		waitForSomeTime();

		
	}

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Error Message"
	 * @author sarvesh.nellore
	 * @Date: 16-08-2017
	 */
	/****************************************************************************************************/		
	@FindBy(xpath=".//*[@id='form0:growl_container']/div/div/div[2]/span")
	private WebElement ErrorMsg_UploadDocument;

	public void toverifyUploadDocumentFieldinWaterConnectionTab04() throws InterruptedException, AWTException
	{

		waitForSomeTime();				
		HighlightOnElement(Upload_Document);
		Assert.assertEquals(true,Upload_Document.isEnabled());
		Assert.assertNotNull(Upload_Document,"Click on Upload_Document in Application of Water and Sewerage sucessfully");
		Upload_Document.click();
		waitForSomeTime();
		System.out.println(" To Verify Upload Document Application of Water&Sewerage link is Present" ); //print for eclipse console
		UpLoadFile("C:\\ILFS\\NRDA\\workspace\\NRDA_FRAMEWORK\\NRDA_PROJECT\\src\\test\\resources\\IMAGE_NRDA_WATER&SEWERAGE\\System.logs.1");
		waitForSomeTime();
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(ErrorMsg_UploadDocument);
		String Expected_Message="Please select actual file, changed extension and .exe not allowed.";
		String Actual_Message=ErrorMsg_UploadDocument.getText();
		Assert.assertEquals(Expected_Message, Actual_Message);
		waitForSomeTime();
		WebElement element1 = ErrorMsg_UploadDocument;
		Actions action = new Actions(driver);
		HighlightOnElement(element1);
		action.moveToElement(element1).build().perform();
		HighlightOnElement(ErrorMsg_Close);
		ErrorMsg_Close.click();
		waitForSomeTime();
		

	}

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Error Message"
	 * @author sarvesh.nellore
	 * @Date: 16-08-2017
	 */
	/****************************************************************************************************/		
	@FindBy(xpath="//a[contains(.,'Drafted Application/प्रारूपित आवेदन')]")
	private WebElement Drafted_Application;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "HomePageMenu".
	 * @author birbal.tahim
	 * @since 2017-09-06
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@class='ui-accordion ui-widget ui-helper-reset ui-hidden-container']/h3/a[contains(.,'DISCONNECTION OF WATER CONNECTION')]")
	private WebElement DisConnectionoFWaterandSewerage;
	
	@FindBy(xpath="//div[@class='ui-accordion-content ui-helper-reset ui-widget-content ui-helper-hidden']/div/div/div/table/tbody/tr/td[4]/span")
	private WebElement Application_NUMBER;

	public void toverifyFunctionalityOfSaveAsDraftinWaterConnectionTab05() throws EncryptedDocumentException, InvalidFormatException, IOException, InterruptedException, AWTException
	{
		waitForSomeTime();
		HighlightOnElement(Reason_Field);
		waitForSomeTime();
		excel.getExcelData(Reason_Field, "WaterConnectionDetails", 0, 1);
		waitForSomeTime();
		waitForSomeTime();
		Upload_Document.click();
		waitForSomeTime();
		System.out.println(" To Verify Upload Document Application of Water&Sewerage link is Present" ); //print for eclipse console
		UpLoadFile("C:\\ILFS\\NRDA\\workspace\\NRDA_FRAMEWORK\\NRDA_PROJECT\\src\\test\\resources\\IMAGE_NRDA_WATER&SEWERAGE\\Raipur1.jpg");
		waitForSomeTime();
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(SaveAsDraftButton);
		Assert.assertEquals(true,SaveAsDraftButton.isEnabled());
		Assert.assertNotNull(SaveAsDraftButton,"Click on Upload_Document in Application of Water and Sewerage sucessfully");
		SaveAsDraftButton.click();
		waitForSomeTime();
		waitForSomeTime();
		System.out.println(" To Verify SaveAsDraftButton Application of Water&Sewerage link is Present" ); //print for eclipse console

		HighlightOnElement(ErrorMsg_UploadDocument);
		/*String Expected_Message="Your application has been saved successfully.";
		String Actual_Message=ErrorMsg_UploadDocument.getText();
		Assert.assertEquals(Expected_Message, Actual_Message);*/
		String S1=ErrorMsg_UploadDocument.getText();
		String ApplicationNumber=S1.substring(51,69);
		WebElement element1 = ErrorMsg_UploadDocument;
		Actions action = new Actions(driver);
		HighlightOnElement(element1);
		action.moveToElement(element1).build().perform();
		HighlightOnElement(ErrorMsg_Close);
		ErrorMsg_Close.click();
		waitForSomeTime();
		/*HighlightOnElement(Drafted_Application);
		Assert.assertEquals(true,Drafted_Application.isEnabled());
		Assert.assertNotNull(Drafted_Application,"Click on Drafted Application of Water and Sewerage sucessfully");
		Drafted_Application.click();
		waitForSomeTime();
		waitForSomeTime();
		System.out.println(" To Verify Drafted_Application of Water&Sewerage link is Present" ); //print for eclipse console
		
		HighlightOnElement(Search_Field);
		Search_Field.sendKeys(ApplicationNumber);
		HighlightOnElement(Search_Button);
		Search_Button.click();
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(DisConnectionoFWaterandSewerage);
		Assert.assertEquals(true,DisConnectionoFWaterandSewerage.isEnabled());
		Assert.assertNotNull(DisConnectionoFWaterandSewerage,"Click on Drafted Application of Water and Sewerage sucessfully");
		DisConnectionoFWaterandSewerage.click();
		waitForSomeTime();
		if(Application_NUMBER.equals(ApplicationNumber))
		{
			System.out.println("Test Case Pass");
		}
		
		else 
		{
			System.out.println("Test Case Fail");
		}
		System.out.println(" To Verify DisConnectionoFWaterandSewerage of Water&Sewerage link is Present" ); //print for eclipse console
*/
		waitForSomeTime();
	}

	
	
	public void toverifyFunctionalityOfResetinWaterConnectionTab06() throws EncryptedDocumentException, InvalidFormatException, IOException, InterruptedException
	{
		HighlightOnElement(Reason_Field);
		excel.getExcelData(Reason_Field, "WaterConnectionDetails", 0, 1);
		waitForSomeTime();
		/*HighlightOnElement(ResetButton);
		Assert.assertEquals(true,ResetButton.isEnabled());
		Assert.assertNotNull(ResetButton,"Click on Reset Button Application of Water and Sewerage sucessfully");
		ResetButton.click();*/
		System.out.println(" To Verify Reset Button of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		waitForSomeTime();
		waitForSomeTime();
		VerifyTextField(Reason_Field);
		waitForSomeTime();
	}

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "HomePageMenu".
	 * @author birbal.tahim
	 * @since 2017-09-06
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@class='ui-accordion ui-widget ui-helper-reset ui-hidden-container Accordian-Header-Black']/h3/a")
	private List<WebElement> HomePage_Fields;


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on alert Yes/NO button".
	 * @author deepak.saini
	 * @since 2017-08-16
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@id='form0:confirmDlg']/div[2]/div/div/center/table/tbody/tr/td/button")
	private List<WebElement> button;

	public void toverifyFunctionalityOfCloseinWaterConnectionTab07() throws EncryptedDocumentException, InvalidFormatException, IOException, InterruptedException	
	{
		try
		{
			HighlightOnElement(Reason_Field);
			excel.getExcelData(Reason_Field, "WaterConnectionDetails", 0, 1);
			waitForSomeTime();
			waitForSomeTime();
			HighlightOnElement(CloseButton);
			//Assert.assertEquals(true,CloseButton.isEnabled());
			//Assert.assertNotNull(CloseButton,"Click on Close Button Application of Water and Sewerage sucessfully");
			CloseButton.click();
			System.out.println(" To Verify Close Button of Water&Sewerage link is Present" ); //print for eclipse console
			waitForSomeTime();
			for(int index=0;index<button.size();index++)
			{
				String buttone=button.get(index).getText();
				System.out.println(buttone);
				if( buttone.trim().equalsIgnoreCase("yes"))
				{
					button.get(index).click();
					waitForSomeTime();
					waitForSomeTime();
					
				}
			}
			waitForSomeTime();

			for(WebElement AllFieldsList :HomePage_Fields)
			{
				
				if(AllFieldsList.isDisplayed())

				{
					HighlightOnElement(AllFieldsList);
					String MenuDetails=AllFieldsList.getText();
					System.out.println("Fields list on HomePage Is:"+MenuDetails );

				}


			}
			waitForSomeTime();
			waitForSomeTime();
		}
		catch (Exception e)
		{
			System.out.println("An error occurred: " +e);
		}

	}


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "HomePageMenu".
	 * @author birbal.tahim
	 * @since 2017-09-06
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//table/tbody/tr/td[1]/label")
	private List <WebElement> All_Fields ;

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Make Payment"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//button[contains(.,'Make Payment') and@type='submit']")
	private WebElement MakePayment_Button;

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Application Number"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="(//table/tbody/tr/td[2]/label)[1]")
	private WebElement Application_Number;


	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Pending Payments"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//a[contains(.,'Pending For Payment/भुगतान हेतु अपूर्ण')]")
	private WebElement Pending_Payments;

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Search Field"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="(//table/tbody/tr/td[2]/input)[1]")
	private WebElement Search_Field;

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Search Button"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//button[contains(.,'Search') and@type='submit']")
	private WebElement Search_Button;

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Search Button"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//div[@class='ui-accordion ui-widget ui-helper-reset ui-hidden-container']/h3/a")
	private WebElement Disconnection_Menu;


	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Application Number"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//div[@class='ui-datatable ui-widget']/div/table/tbody/tr")
	private WebElement Applicationrow;



	public void toverifySubmitFunctionalitywithValidData08() throws EncryptedDocumentException, InvalidFormatException, IOException, InterruptedException, AWTException

	{
		waitForSomeTime();
		HighlightOnElement(Reason_Field);
		waitForSomeTime();
		excel.getExcelData(Reason_Field, "WaterConnectionDetails", 0, 1);
		waitForSomeTime();
		waitForSomeTime();
		Upload_Document.click();
		waitForSomeTime();
		System.out.println(" To Verify Upload Document Application of Water&Sewerage link is Present" ); //print for eclipse console
		UpLoadFile("C:\\ILFS\\NRDA\\workspace\\NRDA_FRAMEWORK\\NRDA_PROJECT\\src\\test\\resources\\IMAGE_NRDA_WATER&SEWERAGE\\Raipur1.jpg");
		waitForSomeTime();
		waitForSomeTime();
		JavascriptExecutor javascript = (JavascriptExecutor) driver;
		javascript.executeScript("alert('Please Enter Captcha..');");
		waitForSomeTime();
		acceptAlert();
		waitForSomeTime();
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(Submit_Button);
		Assert.assertEquals(true,Submit_Button.isEnabled());
		Assert.assertNotNull(Submit_Button,"Click on Submit Button Application of Water and Sewerage sucessfully");
		waitForSomeTime();
		Submit_Button.click();
		System.out.println(" To Verify Submit Button of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		waitForSomeTime();

	}
	
	public void saveApplicationNumberIntoExcelSheet() throws EncryptedDocumentException, InvalidFormatException, IOException
	{
		HighlightOnElement(Application_Number);
		String ApllicationNumber1=Application_Number.getText();
		excel.updateexcelData(ApllicationNumber1);
		System.out.println("Apploication Number is:  "+ ApllicationNumber1 );
		
		
	}

	@FindBy(xpath="//span[contains(.,'DISCONNECTION OF WATER CONNECTION')]/../following-sibling::div[1]/table[1]/tbody/tr/td/select")
	private WebElement SelectPaymentMode;

	
	public void verifyapplicationinPendingPayments08() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		waitForSomeTime();
		HighlightOnElement(Application_Number);
		String ApllicationNumber=Application_Number.getText().trim();
		System.out.println("Apploication Number is:  "+ ApllicationNumber );
		excel.updateexcelDataDisconnectionNumber(ApllicationNumber);
		/*for(WebElement AllFieldsList :All_Fields)
		{
			if(AllFieldsList.isDisplayed())

			{
				String MenuDetails=AllFieldsList.getText();
				System.out.println("Fields list on HomePage Is:"+MenuDetails );

			}


		}*/
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(SelectPaymentMode);
		SelectVisibleText(SelectPaymentMode, "Pay Online");
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(MakePayment_Button);
		Assert.assertEquals(true,MakePayment_Button.isDisplayed());
		System.out.println(" To Verify MakePayment Button of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		waitForSomeTime();

		HighlightOnElement(Pending_Payments);
		Assert.assertEquals(true,Pending_Payments.isEnabled());
		Assert.assertNotNull(Pending_Payments,"Click on Submit Button Application of Water and Sewerage sucessfully");
		Pending_Payments.click();
		System.out.println(" To Verify Pending_Payments of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(Search_Field);
		Search_Field.sendKeys(ApllicationNumber);
		HighlightOnElement(Search_Button);
		Assert.assertEquals(true,Search_Button.isEnabled());
		Assert.assertNotNull(Search_Button,"Click on Search Button Application of Water and Sewerage sucessfully");
		Search_Button.click();
		System.out.println(" To Verify Search button of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		HighlightOnElement(Disconnection_Menu);
		Disconnection_Menu.click();
		HighlightOnElement(Applicationrow);
		Assert.assertEquals(true,Applicationrow.isDisplayed());
		waitForSomeTime();
		waitForSomeTime();

	}

	public void verifysubmitfunctionalityReasonFieldAsBlank09() throws InterruptedException
	{
		waitForSomeTime();
		HighlightOnElement(Reason_Field);
		waitForSomeTime();
		JavascriptExecutor javascript = (JavascriptExecutor) driver;
		javascript.executeScript("alert('Please Enter Captcha..');");
		waitForSomeTime();
		acceptAlert();
		waitForSomeTime();
		waitForSomeTime();
		waitForSomeTime();
		
		HighlightOnElement(Submit_Button);
		Assert.assertEquals(true,Submit_Button.isDisplayed());
		//Assert.assertNotNull(Submit_Button,"Click on SubmitButton in Application of Water and Sewerage sucessfully");
		Submit_Button.click();
		waitForSomeTime();
		waitForSomeTime();
		System.out.println(" To Verify Submit Button Application of Water&Sewerage link is Present" ); //print for eclipse console

		HighlightOnElement(ErrorMsg_ReasonField);
		String Expected_Message="Mandatory Field : Reason";
		String Actual_Message=ErrorMsg_ReasonField.getText();
		Assert.assertEquals(Expected_Message, Actual_Message);
		waitForSomeTime();

		WebElement element1 = ErrorMsg_ReasonField;
		Actions action = new Actions(driver);
		HighlightOnElement(element1);
		action.moveToElement(element1).build().perform();
		HighlightOnElement(ErrorMsg_Close);
		ErrorMsg_Close.click();
		waitForSomeTime();
		waitForSomeTime();

	}
	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Card Number"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//input[@id='ccard_number' and @type='text']")
	private WebElement Card_Number;


	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "Card On Name"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//input[@id='cname_on_card' and@type='text']")
	private WebElement Cardon_Name;

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "CVV Number"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//input[@id='ccvv_number' and @type='password']")
	private WebElement Cvv_Number;

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "ExperidateMonth"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//select[@id='cexpiry_date_month']")
	private WebElement Card_ExpiryMonth;


	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "ExperidateYear"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//select[@id='cexpiry_date_year']")
	private WebElement Card_ExpiryYear;


	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "PayNow Button"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//input[@id='pay_button' and @type='submit']")
	private WebElement PayNow_Button;


	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "BackTo_PreviousPage"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//a[contains(.,'Click here to go back')]")
	private WebElement BackTo_PreviousPage;
	
	public void  applicationSubmitMakePaymentWith_InValidDetails15() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		try
		{
			
			waitForSomeTime();
			waitForSomeTime();
			HighlightOnElement(SelectPaymentMode);
			SelectVisibleText(SelectPaymentMode, "Pay Online");
			waitForSomeTime();
						
			waitForSomeTime();
			Assert.assertEquals(true,MakePayment_Button.isEnabled());
			HighlightOnElement(MakePayment_Button);
			MakePayment_Button.click();
			Reporter.log("MakePayment Button  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Card_Number.isEnabled());
			HighlightOnElement(Card_Number);
			excel.getExcelData(Card_Number, "Card Details", 1, 1);
			Reporter.log("Card Number on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();



			waitForSomeTime();
			Assert.assertEquals(true,Cardon_Name.isEnabled());
			HighlightOnElement(Cardon_Name);
			excel.getExcelData(Cardon_Name, "Card Details", 2, 2);
			Reporter.log("Card on Name Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();	

			waitForSomeTime();
			Assert.assertEquals(true,Cvv_Number.isEnabled());
			HighlightOnElement(Cvv_Number);
			excel.getExcelData(Cvv_Number, "Card Details", 2, 3);
			Reporter.log("CVV Number on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Card_ExpiryMonth.isEnabled());
			HighlightOnElement(Card_ExpiryMonth);
			SelectVisibleText(Card_ExpiryMonth, "Jul (7)");
			Reporter.log("Card_ExpiryMonth Dropdown on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			Assert.assertEquals(true,Card_ExpiryYear.isEnabled());
			HighlightOnElement(Card_ExpiryYear);
			SelectByValue(Card_ExpiryYear, "2019");
			Reporter.log("Card_ExpiryYear Dropdown on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();	


			waitForSomeTime();
			Assert.assertEquals(true,PayNow_Button.isEnabled());
			HighlightOnElement(PayNow_Button);
			PayNow_Button.click();
			Reporter.log("PayNow_Button Button on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			waitForSomeTime();
			waitForSomeTime();


			HighlightOnElement(Transaction_Status);
			String Expected_Message1="Failed";
			String Actual_Message1=Transaction_Status.getText();
			Assert.assertEquals(Expected_Message1, Actual_Message1);
			waitForSomeTime();
			waitForSomeTime();

		}
		catch(Exception ex)
		{
			ex.getMessage();
		}

	}
	
	
	public void  applicationSubmitMakePaymentWith_ValidData12() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		try
		{
			
			HighlightOnElement(Application_Number);
			String ApllicationNumber=Application_Number.getText().trim();
			System.out.println("Apploication Number is:  "+ ApllicationNumber );
			excel.updateexcelDataDisconnectionNumber(ApllicationNumber);
			
			waitForSomeTime();
			waitForSomeTime();
			HighlightOnElement(SelectPaymentMode);
			SelectVisibleText(SelectPaymentMode, "Pay Online");
			waitForSomeTime();
			waitForSomeTime();
			
			
			waitForSomeTime();
			Assert.assertEquals(true,MakePayment_Button.isEnabled());
			HighlightOnElement(MakePayment_Button);
			MakePayment_Button.click();
			System.out.println("MakePayment Button  Application of Water and Sewerage New connection link is Present" ); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Card_Number.isEnabled());
			HighlightOnElement(Card_Number);
			excel.getExcelData(Card_Number, "Card Details", 1, 1);
			System.out.println("Card Number on  Application of Water and Sewerage New connection link is Present" ); //print for eclipse console 
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Cardon_Name.isEnabled());
			HighlightOnElement(Cardon_Name);
			excel.getExcelData(Cardon_Name, "Card Details", 1, 2);
			System.out.println("Card on Name Application of Water and Sewerage New connection link is Present" ); //print for eclipse console 
			waitForSomeTime();	

			waitForSomeTime();
			Assert.assertEquals(true,Cvv_Number.isEnabled());
			HighlightOnElement(Cvv_Number);
			excel.getExcelData(Cvv_Number, "Card Details", 1, 3);
			System.out.println("CVV Number on  Application of Water and Sewerage New connection link is Present" ); //print for eclipse console 
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Card_ExpiryMonth.isEnabled());
			HighlightOnElement(Card_ExpiryMonth);
			SelectVisibleText(Card_ExpiryMonth, "May (5)");
			System.out.println("Card_ExpiryMonth Dropdown on  Application of Water and Sewerage New connection link is Present" ); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			Assert.assertEquals(true,Card_ExpiryYear.isEnabled());
			HighlightOnElement(Card_ExpiryYear);
			SelectByValue(Card_ExpiryYear, "2020");
			System.out.println("Card_ExpiryYear Dropdown on  Application of Water and Sewerage New connection link is Present" ); //print for eclipse console 
			waitForSomeTime();	


			waitForSomeTime();
			Assert.assertEquals(true,PayNow_Button.isEnabled());
			HighlightOnElement(PayNow_Button);
			PayNow_Button.click();
			System.out.println("PayNow_Button Button on  Application of Water and Sewerage New connection link is Present" ); //print for eclipse console 
			waitForSomeTime();
			fluentWait(DownloadReceipt);
			waitForSomeTime();
			
		

		}
		catch(Exception ex)
		{
			ex.getMessage();
		}

	}
	
	
	public void  applicationSubmitMakePaymentWith_BlankFields14() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		try
		{
			waitForSomeTime();
			waitForSomeTime();
			HighlightOnElement(SelectPaymentMode);
			SelectVisibleText(SelectPaymentMode, "Pay Online");
			waitForSomeTime();
			waitForSomeTime();
			
			
			waitForSomeTime();
			Assert.assertEquals(true,MakePayment_Button.isEnabled());
			HighlightOnElement(MakePayment_Button);
			MakePayment_Button.click();
			Reporter.log("MakePayment Button  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Card_Number.isEnabled());
			HighlightOnElement(Card_Number);
			//excel.getExcelData(Card_Number, "Card Details", 2, 1);
			Reporter.log("Card Number on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();



			waitForSomeTime();
			Assert.assertEquals(true,Cardon_Name.isEnabled());
			HighlightOnElement(Cardon_Name);
			//excel.getExcelData(Cardon_Name, "Card Details", 2, 2);
			Reporter.log("Card on Name Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();	

			waitForSomeTime();
			Assert.assertEquals(true,Cvv_Number.isEnabled());
			HighlightOnElement(Cvv_Number);
			//excel.getExcelData(Cvv_Number, "Card Details", 2, 3);
			Reporter.log("CVV Number on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Card_ExpiryMonth.isEnabled());
			HighlightOnElement(Card_ExpiryMonth);
			//SelectVisibleText(Card_ExpiryMonth, "May (5)");
			Reporter.log("Card_ExpiryMonth Dropdown on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			Assert.assertEquals(true,Card_ExpiryYear.isEnabled());
			HighlightOnElement(Card_ExpiryYear);
			//SelectByValue(Card_ExpiryYear, "2020");
			Reporter.log("Card_ExpiryYear Dropdown on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();	


			waitForSomeTime();
			Assert.assertEquals(true,PayNow_Button.isEnabled());
			HighlightOnElement(PayNow_Button);
			PayNow_Button.click();
			Reporter.log("PayNow_Button Button on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();

			HighlightOnElement(Invalid_CardNumber);
			Assert.assertEquals(true,Invalid_CardNumber.isEnabled());
			String Expected_Message="Invalid credit card number.";
			String Actual_Message=Invalid_CardNumber.getText();
			Assert.assertEquals(Expected_Message, Actual_Message);
			waitForSomeTime();

			HighlightOnElement(Invalid_CVVNumber);
			Assert.assertEquals(true,Invalid_CVVNumber.isEnabled());
			String Expected_Message2="Invalid CVV number.";
			String Actual_Message2=Invalid_CVVNumber.getText();
			Assert.assertEquals(Expected_Message2, Actual_Message2);
			waitForSomeTime();

			HighlightOnElement(PleaseSelectDate);
			Assert.assertEquals(true,PleaseSelectDate.isEnabled());
			String Expected_Message4="Please select date";
			String Actual_Message4=PleaseSelectDate.getText();
			Assert.assertEquals(Expected_Message4, Actual_Message4);
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,BackTo_PreviousPage.isEnabled());
			HighlightOnElement(BackTo_PreviousPage);
			BackTo_PreviousPage.click();
			waitForSomeTime();
			Reporter.log("BackTo_PreviousPage Link on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();		
			waitForSomeTime();
			waitForSomeTime();

			HighlightOnElement(Transaction_Status);
			String Expected_Message1="Failed";
			String Actual_Message1=Transaction_Status.getText();
			Assert.assertEquals(Expected_Message1, Actual_Message1);
			waitForSomeTime();
			waitForSomeTime();

		}
		catch(Exception ex)
		{
			ex.getMessage();
		}

	}
	
	@FindBy(xpath="//label[contains(.,'Invalid credit card number.')]")
	private WebElement Invalid_CardNumber;
	
	@FindBy(xpath="//label[contains(.,'Invalid CVV number.')]")
	private WebElement Invalid_CVVNumber;
	
	@FindBy(xpath="//label[contains(.,'Please select date')]")
	private WebElement PleaseSelectDate;
	
	@FindBy(xpath="(//table/tbody/tr/td[2]/label)[4]")
	private WebElement Transaction_Status;
	
	
	@FindBy(xpath="//span[contains(.,'DISCONNECTION OF WATER CONNECTION')]/../following-sibling::div[1]/table[1]/tbody/tr[7]/td/select")
	private WebElement SelectChallan;
	
	@FindBy(xpath="//button[contains(.,'Generate Challan')]")
	private WebElement Generate_Challan;
	
	
	
	public void  verifyGenerateChallanButtonSelectedPaymentasOffline17() throws InterruptedException
	{
		
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(SelectPaymentMode);
		SelectVisibleText(SelectPaymentMode, "Pay Offline");
		waitForSomeTime();
		HighlightOnElement(SelectChallan);
		SelectVisibleText(SelectChallan, "Via Challan@Bank");
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(Generate_Challan);
		Generate_Challan.click();
		waitForSomeTime();
		
		
		
		
	}
	
	
	public void  applicationSubmitMakePaymentWith_InValidCardNumber13() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		try
		{
			waitForSomeTime();
			waitForSomeTime();
			HighlightOnElement(SelectPaymentMode);
			SelectVisibleText(SelectPaymentMode, "Pay Online");
			waitForSomeTime();
			
			waitForSomeTime();
			Assert.assertEquals(true,MakePayment_Button.isEnabled());
			HighlightOnElement(MakePayment_Button);
			MakePayment_Button.click();
			Reporter.log("MakePayment Button  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Card_Number.isEnabled());
			HighlightOnElement(Card_Number);
			excel.getExcelData(Card_Number, "Card Details", 2, 1);
			Reporter.log("Card Number on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();



			waitForSomeTime();
			Assert.assertEquals(true,Cardon_Name.isEnabled());
			HighlightOnElement(Cardon_Name);
			excel.getExcelData(Cardon_Name, "Card Details", 2, 2);
			Reporter.log("Card on Name Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();	

			waitForSomeTime();
			Assert.assertEquals(true,Cvv_Number.isEnabled());
			HighlightOnElement(Cvv_Number);
			excel.getExcelData(Cvv_Number, "Card Details", 2, 3);
			Reporter.log("CVV Number on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,Card_ExpiryMonth.isEnabled());
			HighlightOnElement(Card_ExpiryMonth);
			SelectVisibleText(Card_ExpiryMonth, "May (5)");
			Reporter.log("Card_ExpiryMonth Dropdown on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();
			waitForSomeTime();
			Assert.assertEquals(true,Card_ExpiryYear.isEnabled());
			HighlightOnElement(Card_ExpiryYear);
			SelectByValue(Card_ExpiryYear, "2020");
			Reporter.log("Card_ExpiryYear Dropdown on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();	


			waitForSomeTime();
			Assert.assertEquals(true,PayNow_Button.isEnabled());
			HighlightOnElement(PayNow_Button);
			PayNow_Button.click();
			Reporter.log("PayNow_Button Button on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();

			HighlightOnElement(Invalid_CardNumber);
			Assert.assertEquals(true,Invalid_CardNumber.isEnabled());
			String Expected_Message="Invalid credit card number.";
			String Actual_Message=Invalid_CardNumber.getText();
			Assert.assertEquals(Expected_Message, Actual_Message);
			waitForSomeTime();

			waitForSomeTime();
			Assert.assertEquals(true,BackTo_PreviousPage.isEnabled());
			HighlightOnElement(BackTo_PreviousPage);
			BackTo_PreviousPage.click();
			waitForSomeTime();
			Reporter.log("BackTo_PreviousPage Link on  Application of Water and Sewerage New connection link is Present",true); //print for eclipse console 
			waitForSomeTime();		
			waitForSomeTime();
			waitForSomeTime();

			HighlightOnElement(Transaction_Status);
			String Expected_Message1="Failed";
			String Actual_Message1=Transaction_Status.getText();
			Assert.assertEquals(Expected_Message1, Actual_Message1);
			waitForSomeTime();
			waitForSomeTime();




		}
		catch(Exception ex)
		{
			ex.getMessage();
		}

	}

	
	

	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "BackTo_PreviousPage"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//a[contains(.,'Submitted Application/प्रस्तुत आवेदन')]")
	private WebElement Submitted_Application;
	
	public void verifyapplicationStatusShowingPendingJEinSubmittedApplication12() throws InterruptedException
	{
		
		HighlightOnElement(Application_Number);
		String ApllicationNumber=Application_Number.getText().trim();
		System.out.println("Apploication Number is:  "+ ApllicationNumber );
		HighlightOnElement(Submitted_Application);
		Assert.assertEquals(true,Submitted_Application.isEnabled());
		Assert.assertNotNull(Submitted_Application,"Click on Submitted Application of Water and Sewerage sucessfully");
		Submitted_Application.click();
		System.out.println(" To Verify PSubmitted_Application of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(Search_Field);
		Search_Field.sendKeys(ApllicationNumber);
		HighlightOnElement(Search_Button);
		Assert.assertEquals(true,Search_Button.isEnabled());
		Assert.assertNotNull(Search_Button,"Click on Search Button Application of Water and Sewerage sucessfully");
		Search_Button.click();
		waitForSomeTime();
		System.out.println(" To Verify Search button of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		HighlightOnElement(Disconnection_Menu);
		Disconnection_Menu.click();
		waitForSomeTime();
		waitForSomeTime();
		HighlightOnElement(Applicationrow);
		Assert.assertTrue(Applicationrow.isEnabled());
		System.out.println(" To Verify Application row of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		waitForSomeTime();
	
	}
	/****************************************************************************************************/
	/**
	 * This is the xpath of the WebElement "BackTo_PreviousPage"
	 * @author sarvesh.nellore
	 * @Date: 12-09-2017
	 */
	/****************************************************************************************************/	
	@FindBy(xpath="//button[contains(.,'Download Receipt') and@role='button']")
	private WebElement DownloadReceipt;
	
	public void verifyDownloadReciept13() throws InterruptedException
	
	{
		HighlightOnElement(DownloadReceipt);
		Assert.assertTrue(DownloadReceipt.isEnabled());
		waitForSomeTime();
		waitForSomeTime();
		DownloadReceipt.click();
		System.out.println(" To Verify Download Reciept button of Water&Sewerage link is Present" ); //print for eclipse console
		waitForSomeTime();
		waitForSomeTime();
		
		
	}
	
	
}
