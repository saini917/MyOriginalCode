package HRMS_ERP_PERFORMANCE_APPRAISAL;

import java.io.IOException;

import org.apache.log4j.Logger;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.Reporter;

import GenericLibrary.ExcelDataDriver;
import GenericLibrary.WebdriverCommonDriverLibrary;

public class HRMS_ERP_Performance_Appraisal_Reviewer_Sc_18 extends WebdriverCommonDriverLibrary
{
	
	Logger log=Logger.getLogger("devpinoyLogger");
	ExcelDataDriver exceldata=new ExcelDataDriver();
	WebDriverWait wait = new WebDriverWait(driver,10);

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Edit button".
	 * @author deepak.saini
	 * @since 2017-11-16
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//button[contains(text(),'Edit')]")
	private WebElement editbtn;
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Save button".
	 * @author deepak.saini
	 * @since 2017-11-16
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div/button[contains(text(),'Save')]")
	private WebElement savebtn;
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Error message".
	 * @author deepak.saini
	 * @since 2017-11-16
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@class='o_notification o_error']/div/ul/li[contains(text(),\"Reviewer's Comment\")]")
	private WebElement errormsg;
	

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Select rating".
	 * @author deepak.saini
	 * @since 2017-11-16
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@class='o_form_sheet']/div/table/tbody/tr/td/label[contains(text(),'Rating')]/../following-sibling::td/select")
	private WebElement rating;
	

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Reviewer Comment".
	 * @author deepak.saini
	 * @since 2017-11-16
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@class='o_form_sheet']/div/table/tbody/tr/td/label[contains(text(),'Rating')]/../following-sibling::td/../following-sibling::tr/td/textarea[1]")
	private WebElement reviewercomment;
	
	public void clickOnEditButton_Sc_18_TC_01()
	{
		wait.until(ExpectedConditions.elementToBeClickable(editbtn));
		HighlightOnElement(editbtn);
		Reporter.log("Expected result:"+editbtn.getText(),true);
		editbtn.click();
		Reporter.log("click on edit button succesfully",true);
	}
	
	public void clickOnSaveButtonWithInvalidData_Sc_18_TC_01()
	{
		wait.until(ExpectedConditions.elementToBeClickable(savebtn));
		HighlightOnElement(savebtn);
		Reporter.log("Expected result:"+savebtn.getText(),true);
		savebtn.click();
		Reporter.log("click on save button succesfully",true);
		
		String actulValue="Reviewer's Comment";
		Assert.assertEquals(actulValue,errormsg.getText(),"Matched");
		Reporter.log("Error Message:"+errormsg.getText(),true);
	}
	
	public void clickOnSaveButtonWithValidData_Sc_18_TC_02() throws InterruptedException, EncryptedDocumentException, InvalidFormatException, IOException
	{
		clickOnEditButton_Sc_18_TC_01();
		JavascriptExecutor jse = (JavascriptExecutor)driver;
		jse.executeScript("window.scrollBy(0,150)", "");
		
		wait.until(ExpectedConditions.elementToBeClickable(rating));
		HighlightOnElement(rating);
		SelectVisibleText(rating,"Average");
		
		exceldata.getExcelData(reviewercomment,"Reviewer Comment",0,0);
		wait.until(ExpectedConditions.elementToBeClickable(savebtn));
		HighlightOnElement(savebtn);
		Reporter.log("Expected result:"+savebtn.getText(),true);
		savebtn.click();
		Reporter.log("click on save button succesfully",true);
	}

}
