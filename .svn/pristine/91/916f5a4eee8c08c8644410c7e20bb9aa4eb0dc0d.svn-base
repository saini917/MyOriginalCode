package NRDA_NewConnection;

import java.awt.AWTException;
import java.io.IOException;
import java.util.List;

import org.apache.log4j.Logger;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.Reporter;

import GenericLibrary.CommonLibrary;
import GenericLibrary.ExcelDataDriver;


public class ToVerifyConnectionDetailsTab_SC_08_TC_23 extends CommonLibrary 
{
	ExcelDataDriver excel=new ExcelDataDriver();
	Logger log=Logger.getLogger("devpinoyLogger");
	WebDriverWait wait = new WebDriverWait(driver,50);

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on dropdown".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@class='ui-selectonemenu ui-widget ui-state-default ui-corner-all ui-helper-clearfix']/div[3]/span")
	private WebElement clickonselectactiondrop;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "select value".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//ul[@class='ui-selectonemenu-items ui-selectonemenu-list ui-widget-content ui-widget ui-corner-all ui-helper-reset']/li")
	private List<WebElement> selectdropdownvalue;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Submit".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@id='inboxForm:Nb']/div/center/button/span[contains(text(),'Submit')]")
	private WebElement submit;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "error msg".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//span[contains(text(),'Please enter comments !')]")
	private WebElement errormessage1;

	public void selectAction() throws InterruptedException
	{
		HighlightOnElement(clickonselectactiondrop);
		clickonselectactiondrop.click();

		for(int i=0;i<selectdropdownvalue.size();i++)
		{
			String value=selectdropdownvalue.get(i).getText();
			if(value.equalsIgnoreCase("Forward"))
			{
				selectdropdownvalue.get(i).click();
				waitForSomeTime();
			}
		}

	}
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on dropdown".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@id='inboxForm:Nb']/div/div/div/center/table/tbody/tr/td/label[contains(text(),'Select Action')]/../following-sibling::td/span/div/div/span")
	private WebElement clickonselectactiondrop1;
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "select value".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//ul[@class='ui-selectonemenu-items ui-selectonemenu-list ui-widget-content ui-widget ui-corner-all ui-helper-reset']/li")
	private List<WebElement> selectdropdownvalue1;
	
	public void selectUser() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(clickonselectactiondrop1));
		wait.until(ExpectedConditions.elementToBeClickable(clickonselectactiondrop1));
		Assert.assertTrue(clickonselectactiondrop1.isDisplayed());
		HighlightOnElement(clickonselectactiondrop1);
		Assert.assertTrue(clickonselectactiondrop1.isEnabled());
		clickonselectactiondrop1.click();
		waitForSomeTime();
		for(int i=0;i<selectdropdownvalue1.size();i++)
		{
			String value=selectdropdownvalue1.get(i).getText();
			if(value.equalsIgnoreCase("Hari Singh (FE)"))
			{
				selectdropdownvalue1.get(i).click();
				waitForSomeTime();
			}
		}
	}
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on dropdown".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="(//button/span[contains(text(),'Search')])[1]")
	private WebElement searchbtn;
	
	public void clickOnSearchBtn() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(searchbtn));
		wait.until(ExpectedConditions.elementToBeClickable(searchbtn));
		Assert.assertTrue(searchbtn.isDisplayed());
		HighlightOnElement(searchbtn);
		Assert.assertTrue(searchbtn.isEnabled());
		searchbtn.click();
		waitForSomeTime();
	}
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on create New file".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="(//form[@id='inboxForm']/span/div/div/div/div/center/table/tbody/tr/td/button/span)[5]")
	private WebElement createtofile;
	public void clickOnCreateNewFill() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(createtofile));
		wait.until(ExpectedConditions.elementToBeClickable(createtofile));
		HighlightOnElement(createtofile);
		Assert.assertTrue(createtofile.isEnabled());
		createtofile.click();
		waitForSomeTime();
	}
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on create New file".
	 * @author deepak saini
	 * @since 06-01-2018
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@id='inboxForm:createFileDlg']/div/div/div/table/tbody/tr/td/label[contains(text(),'Subject')]/../following-sibling::td/input")
	private WebElement subject;
	
	@FindBy(xpath="//div[@id='inboxForm:createFileDlg']/div/div/div/table/tbody/tr/td/label[contains(text(),'File Number')]")
	private WebElement clickonany;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on create New file".
	 * @author deepak saini
	 * @since 06-01-2018
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@id='inboxForm:createFileDlg']/div/div/div/table/tbody/tr/td/label[contains(text(),'File Number')]/../following-sibling::td/table/tbody/tr/td/input")
	private WebElement filenum;
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Department".
	 * @author deepak saini
	 * @since 06-01-2018
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@id='inboxForm:createFileDlg']/div/div/div/table/tbody/tr/td/label[contains(text(),'Department')]/../following-sibling::td/select")
	private WebElement dept;

	public void verifyFile() throws EncryptedDocumentException, InvalidFormatException, IOException, InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(subject));
		Assert.assertTrue(subject.isDisplayed());
		excel.getExcelData(subject, "File Data",3,1);
		clickonany.click();
		waitForSomeTime();

		wait.until(ExpectedConditions.visibilityOf(filenum));
		Assert.assertTrue(filenum.isDisplayed());
		excel.getExcelData(filenum, "File Data",3,0);
		
		wait.until(ExpectedConditions.visibilityOf(dept));
		Assert.assertTrue(dept.isDisplayed());
		HighlightOnElement(dept);
		Assert.assertTrue(dept.isEnabled());
		SelectVisibleText(dept,"WATER AND SEWERAGE SECTION");
		Reporter.log(" Enter data on Create a file form",true);
		waitForSomeTime();
	}
	
	@FindBy(xpath="//div[@id='inboxForm:createFileDlg']/div/div/div/center/table/tbody/tr/td/button/span[contains(text(),'Submit')]")
	private WebElement filesubmit;
	
	public void clickOnFileSubmit() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(filesubmit));
		wait.until(ExpectedConditions.elementToBeClickable(filesubmit));
		Assert.assertTrue(filesubmit.isDisplayed());
		HighlightOnElement(filesubmit);
		Assert.assertTrue(filesubmit.isEnabled());
		filesubmit.click();
		Reporter.log("Click on Submit button",true);
		waitForSomeTime();
		Reporter.log("1. User should be able to submit the info successfully. \n 2. Filled information will be seen in a grid form  \n 3. User should be able to select a record from grid.",true);
	}
	
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "select record".
	 * @author deepak saini
	 * @since 06-01-2018
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@id='inboxForm:searchdata']/div/table/tbody/tr/td/div")
	private WebElement selectrecord;

	public void selectRecord() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(selectrecord));
		wait.until(ExpectedConditions.elementToBeClickable(selectrecord));
		Assert.assertTrue(selectrecord.isDisplayed());
		HighlightOnElement(selectrecord);
		Assert.assertTrue(selectrecord.isEnabled());
		Actions act=new Actions(driver);
		act.click(selectrecord).build().perform();
		waitForSomeTime();
	}
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Fill In Form Button".
	 * @author deepak saini
	 * @since 06-01-2018
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//form[@id='inboxForm']/span/div/div/div/div/center/table/tbody/tr/td/button/span[contains(text(),'Fill In Form')]")
	private WebElement fillinformbtn;
	
	public void clickOnFillInFormBtn() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(fillinformbtn));
		wait.until(ExpectedConditions.elementToBeClickable(fillinformbtn));
		Assert.assertTrue(fillinformbtn.isDisplayed());
		HighlightOnElement(fillinformbtn);
		Assert.assertTrue(fillinformbtn.isEnabled());
		fillinformbtn.click();
		Reporter.log("Select a record & click on 'Fill in Form' button",true);
		waitForSomeTime();
	}
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Comment ".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@id='inboxForm:Nb']/div/div[3]/div[2]/center/table/tbody/tr/td[2]/textarea")
	private WebElement entercommentbox;
	
	public void enterComment() throws EncryptedDocumentException, InvalidFormatException, IOException, InterruptedException
	{
		HighlightOnElement(entercommentbox);
		String comment=excel.getExcelData(entercommentbox,"Customer ID",1,8);
		Reporter.log("Expected result:"+comment,true);
		waitForSomeTime();
	}
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "upload document".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/

	@FindBy(xpath="//div[@id='inboxForm:Nb']/div/div[3]/div[2]/center/table/tbody/tr/td[2]/table/tbody/tr[1]/td/div/div[1]/label/input")
	private WebElement uploaddocument;
	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "file upload message".
	 * @author deepak saini
	 * @since 2017-09-22
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//span[contains(text(),'File uploaded Successfully')]")
	private WebElement fileuploadmessage;
	
	public void verifyuploadDocument() throws InterruptedException, AWTException
	{
		HighlightOnElement(uploaddocument);
		uploaddocument.click();
		waitForSomeTime();
		UpLoadFile("C:\\ILFS\\NRDA\\workspace\\NRDA_FRAMEWORK\\NRDA_PROJECT\\src\\test\\resources\\IMAGE_NRDA_WATER&SEWERAGE\\Raipur.jpg");
		waitForSomeTime();
		String Expected=fileuploadmessage.getText();
		String Actual="File uploaded Successfully";
		Assert.assertEquals(Expected,Actual,"Test case pass");
		Reporter.log("Expected result:"+Expected,true);
		waitForSomeTime();
		JavascriptExecutor jse = (JavascriptExecutor)driver;
		jse.executeScript("window.scrollBy(0,250)", "");
		waitForSomeTime();
	}
	
	@FindBy(xpath="//div[@class='ui-growl-message']/span[contains(text(),'Your application submitted successfully.')]")
	private WebElement successfulMsg;
	
	public void clickOnSubmit() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(submit));
		wait.until(ExpectedConditions.elementToBeClickable(submit));
		submit.click();
		Reporter.log("click on Submit button succesfully",true);
		waitForSomeTime();
		waitForSomeTime();
		
		wait.until(ExpectedConditions.visibilityOf(successfulMsg));
		HighlightOnElement(successfulMsg);
		String Actual="Your application submitted successfully.";
		String Expected=successfulMsg.getText();
		Assert.assertEquals(Actual,Expected,"Matched");
		Reporter.log("Expected Result:"+Expected,true);
	}
	
}
