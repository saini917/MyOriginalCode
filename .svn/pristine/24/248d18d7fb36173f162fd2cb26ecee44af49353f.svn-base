package WaterAndSeweragePropertyTaxManagement;

import java.io.IOException;
import java.util.List;

import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.Reporter;

import GenericLibrary.ExcelDataDriver;
import GenericLibrary.CommonLibrary;

public class ToVerifySpecificOnePendingApplication_SC_11_02 extends CommonLibrary
{
	ExcelDataDriver excel=new ExcelDataDriver();
	WebDriverWait wait=new WebDriverWait(driver,10);
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "ENTER APPLICATION NUMBER".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//div[@class='wrapper']/table/tbody/tr/td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div/div/div/table/tbody/tr/td[contains(text(),'Enter Application Number')]/following-sibling::td/input")
	private WebElement enterApplicationNymber;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "SEARCH".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//button/span[contains(text(),'Search')]")
	private WebElement searchbtn;


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "ACTION".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//table/tbody/tr/td/a/img[@src='/NRDAuthority/resources/images/view-icon.png']")
	private WebElement action;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "DASHBOARD DETAILS".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//table/tbody/tr/td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/span/span/div/div/div/div/span")
	private List<WebElement> details;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "DETAIL UNDER BASIC DETAILS".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/

	@FindBy(xpath="//table/tbody/tr/td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/span/span/div/div/div/div/span[contains(text(),'Basic Details')]/../following-sibling::div/table/tbody/tr/td/span")
	private List<WebElement> underbasicdetails;

	@FindBy(xpath="//table/tbody/tr/td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/span/span/div/div/div/ul/li/a")
	private List<WebElement> listdetails;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "DETAIL UNDER ACTION AND COMMENT".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//table/tbody/tr/td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/span/span/div/div/div/div/span[contains(text(),'Action and Comment')]/../following-sibling::div/center/table/tbody/tr/td/label")
	private List<WebElement> underActionAndcomment;

	@FindBy(xpath="//table/tbody/tr/td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/span/span/div/div/div/div/span[contains(text(),'Action and Comment')]/../following-sibling::div/center/table/tbody/tr/td/span[contains(text(),'Upload Document')]")
	private WebElement uploaddocu;


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "DOWNLOAD ASSESSMENT REPORT".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/

	@FindBy(xpath="//button/span[contains(text(),'Download Assessment Report')]")
	private WebElement downloadassessment;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "DOWNLOAD ASSESSMENT REPORT".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/

	@FindBy(xpath="//button/span[contains(text(),'Print')]")
	private WebElement print;


	/*
	 * This is the xpath of the WebElement "CLOSE".
	 * @author deepak.saini
	 * @since 2017-11-29
	 */
	/****************************************************************************************************/
	@FindBy(xpath="//button/span[contains(text(),'Close')]")
	private WebElement closebtn;

	public void verifySpecificPendingApplication() throws EncryptedDocumentException, InvalidFormatException, IOException, InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(enterApplicationNymber));
		HighlightOnElement(enterApplicationNymber);
		Assert.assertTrue(enterApplicationNymber.isDisplayed(),"ENTER APPLICATION INPUT BOX is displayed");
		Assert.assertTrue(enterApplicationNymber.isEnabled(),"ENTER APPLICATION INPUT BOX is enabled");
		/*String applicationNo=*/excel.getExcelData(enterApplicationNymber,"PropertyTax_Application_Num",0 ,1);
		//Reporter.log("Approved Application Number"+applicationNo,true);
		wait.until(ExpectedConditions.elementToBeClickable(searchbtn));
		HighlightOnElement(searchbtn);
		Assert.assertTrue(searchbtn.isDisplayed(),"SEARCH BUTTON is displayed");
		Assert.assertTrue(searchbtn.isEnabled(),"SEARCH BUTTON is enabled");
		searchbtn.click();
		waitForSomeTime();
	}
	public void clickOnAction() throws InterruptedException
	{
		wait.until(ExpectedConditions.elementToBeClickable(action));
		HighlightOnElement(action);
		Assert.assertTrue(action.isDisplayed(),"ACTION BUTTON is displayed");
		Assert.assertTrue(action.isEnabled(),"ACTION BUTTON is enabled");
		Actions act=new Actions(driver);
		act.click(action).build().perform();
		//Reporter.log("Action is performed on action button image ",true);

	}

	public void verifyAfterSelectpPendingAppDashboard() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOfAllElements(details));
		for(WebElement detail:details)
		{
			HighlightOnElement(detail);
			Assert.assertTrue(detail.isDisplayed());
			//Reporter.log("Expected result:"+detail.getText(),true);
		}
		wait.until(ExpectedConditions.visibilityOfAllElements(underbasicdetails));
		for(WebElement detail:underbasicdetails)
		{
			HighlightOnElement(detail);
			Assert.assertTrue(detail.isDisplayed());
			//Reporter.log("Expected result:"+detail.getText(),true);
		}

		wait.until(ExpectedConditions.elementToBeClickable(downloadassessment));
		HighlightOnElement(downloadassessment);
		Assert.assertTrue(downloadassessment.isEnabled(),"DOWNLOAD ASSESSMENT REPORT IS ENABLED");

		for(WebElement lis:listdetails)
		{
			HighlightOnElement(lis);
			Assert.assertTrue(lis.isDisplayed());
			//Reporter.log("Expected result:"+lis.getText(),true);
		}
		wait.until(ExpectedConditions.elementToBeClickable(print));
		HighlightOnElement(print);
		Assert.assertTrue(print.isDisplayed(),"PRINT BUTTON is displayed");


		wait.until(ExpectedConditions.elementToBeClickable(closebtn));
		HighlightOnElement(closebtn);
		Assert.assertTrue(closebtn.isDisplayed(),"CLOSE BUTTON is displayed");
		//Reporter.log("Expected result:"+closebtn.getText(),true);

	}
}
