package NRDA_NewConnection;

import java.util.List;

import org.apache.log4j.Logger;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.Reporter;

import GenericLibrary.CommonLibrary;
import GenericLibrary.ExcelDataDriver;

public class ToVerifyConnectionDetailsTab_SC_08_TC_06 extends CommonLibrary 
{
	ExcelDataDriver excel=new ExcelDataDriver();
	Logger log=Logger.getLogger("devpinoyLogger");
	WebDriverWait wait = new WebDriverWait(driver,50);

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Pending Application".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//div[@class='col-lg-12 col-md-12 padmar0']/ul/li/../li[2]/a/span/img")
	private WebElement pendingapplication;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "New Application Label" .
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div[2]/div[2]/h3/a")
	private WebElement newapplication;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "New Application menu".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div[2]/div[2]/h3/span")
	private WebElement clickonNewapplication;


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Under New Application menu".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div[2]/div[2]/div/div/h3/a")
	private List<WebElement> underNewApplicationpending;

	public void clickOnPendingApplication() throws InterruptedException
	{
		wait.until(ExpectedConditions.visibilityOf(pendingapplication));
		wait.until(ExpectedConditions.elementToBeClickable(pendingapplication));
		Assert.assertTrue(pendingapplication.isDisplayed());
		HighlightOnElement(pendingapplication);
		Assert.assertTrue(pendingapplication.isEnabled());
		pendingapplication.click();
		Reporter.log("Click on 'Pending Applications' icon",true);
		Thread.sleep(50000);
	}
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "menu".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div[2]/div/h3/a")
	private List<WebElement> menu;

	public void verifyApplicationMenu() throws InterruptedException
	{
		/*clickonrtiquestion.click();*/
		for(WebElement list:menu)
		{
			HighlightOnElement(list);
			Assert.assertTrue(list.isDisplayed());
			waitForSomeTime();
			Reporter.log("Expected result:"+list.getText(),true);
		}
	}

	public void verifyNewApplication()
	{

		/*clickonNewapplication.click();
		Reporter.log("New Application seen successfully",true);
		waitForSomeTime();*/

		for(WebElement menulistnewapplication:underNewApplicationpending)
		{
			if(menulistnewapplication.isDisplayed())
			{
				HighlightOnElement(menulistnewapplication);
				String pendingapplication=menulistnewapplication.getText();
				Reporter.log("Menu list under New Application:"+pendingapplication,true);
			}
		}
	}


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on Pending Installation".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div[2]/div[3]/h3/span")
	private WebElement clickonpendinginstallation;

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Pending Installation".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div[2]/div[3]/h3/a")
	private WebElement pendinginstallation;


	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "Menu under Pending Installation".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div[2]/div[3]/div/div/h3/a")
	private List<WebElement> underPendinginstallation;

	public void verifyPendingInstallation() throws InterruptedException
	{
		/*clickonpendinginstallation.click();
		waitForSomeTime();*/

		for(WebElement menulistpendinginstallation:underPendinginstallation)
		{
			if(menulistpendinginstallation.isDisplayed())
			{
				HighlightOnElement(menulistpendinginstallation);
				String pendinginstalation=menulistpendinginstallation.getText();
				Reporter.log("Menu list under Pending Installation:"+pendinginstalation,true);
			}
		}
	}

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "click on RTI".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//td[@class='rightColWithLeftPad']/table/tbody/tr/td/form/div/div[2]/div[4]/h3/span")
	private WebElement clickonrtiquestion;

	
	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "to check Application status pending".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//span[contains(text(),'PENDING')]")
	private List<WebElement> applicationstatus;

	public void verifyStatus() throws InterruptedException
	{
		for(WebElement status:applicationstatus)
		{
			if(status.isDisplayed())
			{
				HighlightOnElement(status);
				Assert.assertNotNull(status.isDisplayed());
				String pending_status=status.getText();
				Reporter.log("Status:"+pending_status,true);
				waitForSomeTime();
			}
		}
	}
	

	/****************************************************************************************************/
	/*
	 * This is the xpath of the WebElement "verify action".
	 * @author deepak saini
	 * @since 2017-09-21
	 */
	/*****************************************************************************************************/
	@FindBy(xpath="//a/img")
	private List<WebElement> action;
	
	public void verifyAction()
	{
		for(WebElement list:action)
		{
			HighlightOnElement(list);
			Assert.assertNotNull(list.isDisplayed());
		}
		Reporter.log("Expected: Action",true);
	}
}
